<PMML xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.dmg.org/PMML-4_3" version="4.4" xsi:schemaLocation="http://www.dmg.org/PMML-4_3 http://www.dmg.org/pmml/v4-3/pmml-4-3.xsd">
  <Header copyright="Copyright (c) COMPANYNAME" description="PMML Model">
    <Timestamp>2017-06-19 14:56:22.998854</Timestamp>
  </Header>
  <DataDictionary numberOfFields="785">
    <DataField dataType="string" name="target_class" optype="categorical">
      <Value value="0"/>
      <Value value="1"/>
      <Value value="2"/>
      <Value value="3"/>
      <Value value="4"/>
      <Value value="5"/>
      <Value value="6"/>
      <Value value="7"/>
      <Value value="8"/>
      <Value value="9"/>
    </DataField>
    <DataField dataType="double" name="V1" optype="continuous"/>
    <DataField dataType="double" name="V2" optype="continuous"/>
    <DataField dataType="double" name="V3" optype="continuous"/>
  </DataDictionary>
  <script for="Caffe_model_2017_6_19_14_56_23" class="preprocessing">
    sum = {}
    count = {}
    result = {}

    import json
    for dict in script_context.input:
        for (key, value) in dict.items():
            if key in sum:
                sum[key] += value
            else:
                sum[key] = value
            if key in count:
                count[key] += 1
            else:
                count[key] = 1
    for key in sum:
        for key in count:
            result[key] = sum[key] / count[key]

    script_context.output = json.dumps(result)
  </script>
  <DeepNetwork activationFunction="identity" functionName="classification" modelName="Caffe_model_2017_6_19_14_56_23">
    <MiningSchema>
      <MiningField name="net1_top5" usageType="predicted"/>
      <MiningField name="net2_top5" usageType="predicted"/>
      <MiningField name="net3_top5" usageType="predicted"/>
      <MiningField name="image" usageType="active"/>
    </MiningSchema>
    <Output>
      <OutputField dataType="string" feature="predictedValue" name="class" optype="categorical"/>
      <OutputField dataType="double" feature="probability" name="p_0" optype="continuous" value="0"/>
      <OutputField dataType="double" feature="probability" name="p_1" optype="continuous" value="1"/>
      <OutputField dataType="double" feature="probability" name="p_2" optype="continuous" value="2"/>
    </Output>
    <NetworkLayer activationFunction="identity" connectionLayerId="-1" layerId="0" layerType="convolution2D">
      <LayerParameters featureMaps="20" inputDimension="(28, 28, 1)" kernel="(5, 5)" outputDimension="(24, 24, 20)" pad="(0, 0, 0, 0)" stride="(1, 1)"/>
      <LayerWeights>data:float32;base64,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</LayerWeights>
      <LayerBias src="data:float;base64,UzOQvE+L/LwBL1g9Jf4lPnDrTr1Bk7C8bOsxPrAfKb4/fC892NhpPXrCx73A0oe7ym7vPfXuv70VQP+84bavvZeGML5LXyS+fVcnvGjfwz0="/>
    </NetworkLayer>
  </DeepNetwork>
</PMML>
